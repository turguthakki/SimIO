@* ######################################################################## *@
<style>
  .project-list-item-container {
    display : flex;
    flex-direction : column;
    min-height: 4em;
  }
  .project-list-item-project-name-container {
    position : relative;
    font-size 4em;
    flex-grow: 1;
  }

  .project-list-item-project-name {
  }
  .project-list-item-project-folder {
    color : gray;
    font-size : 0.8em;
  }

  .project-list-item-select {
    position: absolute;
    top : 0px;
    right : 0px;
  }
  .project-list-item-actions {
    display: flex;
    justify-content: flex-end;
    gap : 5px;
  }

  .project-list-item-actions > :first-child {
    margin-right: auto;
  }
</style>

@* ######################################################################## *@
<div class="project-list-item-container white-card">
  <div class="project-list-item-project-name-container">
    <div class="project-list-item-project-name">@project.name</div>
    <div class="project-list-item-project-folder">@project.projectFolder</div>
    <input type="checkbox" class="project-list-item-select"/>
  </div>

  <div class="project-list-item-actions">
    <button>âš™</button>
    <button>ðŸ–‰</button>
    <button>ðŸ”§</button>
    <button>â¯ˆ</button>
  </div>
</div>

@* ######################################################################## *@
@code {
  [Parameter]
  public Project project {get; set;}

  // -------------------------------------------------------------------------
  protected override void OnInitialized()
  {
    base.OnInitialized();
    InvokeAsync(StateHasChanged);
    Project.onProjectsChanged += () => {
      InvokeAsync(StateHasChanged);
    };
  }
}
