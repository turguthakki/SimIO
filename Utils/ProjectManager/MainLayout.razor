@using System.Threading;
@using th.SimIO.ProjectManager;

@* ######################################################################## *@
<style>
.initializing {
  align-self: center;
  text-align: center;
  color: aquamarine;
  display : @((ProjectManager.initialized ? "none" : "block"));
}

.main {
  position: fixed;
  width: 100%;
  height: 100%;
  overflow:hidden;
  display : @((ProjectManager.initialized ? "block" : "none"));
  display:flex;
  flex-direction : column;
}

.projects {
  display:flex;
  flex-direction: row;
  width: 100%;
  height: 100%;
  overflow:hidden;
}

.selected-project {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.project-list {
  height: 100%;
}

</style>


@* ######################################################################## *@
<div class="initializing" style=''>
  Loading...
</div>
<div class="main" style=''>
  <div></div>
    <div class="projects">
      <SelectedProject class="selected-project"/>
      <ProjectList class="project-list"/>
    </div>
  <div></div>
</div>

@* ######################################################################## *@
@code {
  // -------------------------------------------------------------------------
  protected override void OnInitialized()
  {
    base.OnInitialized();
    InvokeAsync(StateHasChanged);
    ProjectManager.onStateChanged += () => InvokeAsync(StateHasChanged);
  }
}
